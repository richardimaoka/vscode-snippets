{
  // Place your snippets for typescriptreact here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  "Interface for React Functional Component": {
    //prefix is what you type in to search for the snippet
    "prefix": "interface for react props",
    "scope": "javascript,typescriptreact,typescriptreact",
    "body": [
      "export interface ${1}${TM_FILENAME_BASE}Props {",
      "  $2",
      "}",
      ""
    ],
    "description": "export interface react props"
  },
  "Export an empty React Function Component": {
    //prefix is what you type in to search for the snippet
    "prefix": "const react function component",
    "scope": "javascript,typescriptreact,typescriptreact",
    "body": [
      "export const ${TM_FILENAME_BASE} = (): JSX.Element => {",
      "  return (",
      "    <div>$2</div>",
      "  )",
      "}",
      ""
    ],
    "description": "export react functional component"
  },
  "GraphQL Fragment": {
    //prefix is what you type in to search for the snippet
    "prefix": "fragment (GraphQL) definition in React",
    "scope": "javascript,typescript,typescriptreact",
    "body": [
      "${TM_FILENAME_BASE}.fragment = gql`",
      "  ${TM_FILENAME_BASE} on $1 {",
      "    $2",
      "  }`"
    ]
  },
  "Import from": {
    //prefix is what you type in to search for the snippet
    "prefix": "import from",
    "scope": "javascript,typescript,typescriptreact",
    "body": ["import {$2} from \"./$1\""],
    "description": "Import from a file"
  },
  "emotion.css import": {
    //prefix is what you type in to search for the snippet
    "prefix": "import emotion @jsxImportSource",
    "scope": "javascript,typescript,typescriptreact",
    "body": [
      "/** @jsxImportSource @emotion/react */",
      "import { css } from \"@emotion/react\"",
      ""
    ],
    "description": "Macro and Import for emotion.css"
  },
  "emotion.css attribute": {
    //prefix is what you type in to search for the snippet
    "prefix": "css attribute in emotion",
    "scope": "javascript,typescript,typescriptreact",
    "body": ["css={css`$1`} "],
    "description": "emotion.css attribute inside a JSX tag"
  },
  "gql @apollo/client import": {
    //prefix is what you type in to search for the snippet
    "prefix": "gqlimp",
    "scope": "javascript,typescript,typescriptreact",
    "body": ["import { gql } from \"@apollo/client\""],
    "description": "Macro and Import for emotion.css"
  },
  "React.Fragment insertion": {
    //prefix is what you type in to search for the snippet
    "prefix": "<></> component in React",
    "scope": "javascript,typescript,typescriptreact",
    "body": ["<></>"],
    "description": "React.Fragment insertion"
  }
}
